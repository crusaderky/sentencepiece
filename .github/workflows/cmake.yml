name: CI for general build

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch: # allows to trigger/restart manually

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm, macos-13, macos-latest ]
        arch: [ '' ]
        include:
          - os: windows-latest
            arch: Win32
          - os: windows-latest
            arch: x64
          - os: windows-11-arm
            arch: ARM64

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write # svenstaro/upload-release-action 

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Config for Windows
      if: runner.os == 'Windows'
      run: |
        cmake -A ${{ matrix.arch }} -B build -DSPM_BUILD_TEST=ON -DSPM_ENABLE_SHARED=OFF -DCMAKE_INSTALL_PREFIX=build/root

    - name: Config for Linux/MacOSX
      if: runner.os != 'Windows'
      env:
        CMAKE_OSX_ARCHITECTURES: arm64;x86_64
      run: cmake -B build -DSPM_BUILD_TEST=ON -DCMAKE_INSTALL_PREFIX=build/root

    - name: Build
      run: cmake --build build --config Release --target install --parallel 8

    - name: Test
      working-directory: build
      run: ctest -C Release --output-on-failure

    - name: Package
      working-directory: build
      run: cpack

    - name: Rename Linux ARM binaries
      # Avoid collision between Linux x64 and Linux ARM binaries,
      # and between Windows x64 and Windows ARM, on
      # svenstaro/upload-release-action below.
      # Note that macos-13 and macos-latest also produce packages with
      # colliding names, but both macOS builds feature both architectures.
      if: matrix.os == 'ubuntu-24.04-arm'
      run: for f in build/*Linux*.7z; do mv -v $f "${f/Linux/Linux-arm}"; done

    - name: Rename Windows ARM binaries
      # Avoid collision between Linux x64 and Linux ARM binaries,
      # and between Windows x64 and Windows ARM, on
      # svenstaro/upload-release-action below.
      # Note that macos-13 and macos-latest also produce packages with
      # colliding names, but both macOS builds feature both architectures.
      if: matrix.os == 'windows-11-arm'
      shell: bash
      run: for f in build/*win64*.7z; do mv -v $f "${f/win64/win64-arm}"; done

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: ./build/*.7z

    - name: Upload Release Assets
      # Binaries built on MacOS Intel and MacOS M1 should be identical
      if: startsWith(github.ref, 'refs/tags/') && matrix.os != 'macos-13'
      uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # v2.11.2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./build/*.7z
        tag: ${{ github.ref }}
        overwrite: true
        prerelease: true
        file_glob: true
        body: "This is my release text"
